[gd_scene load_steps=9 format=2]

[ext_resource path="res://Fonts/RobotoLight.tres" type="DynamicFont" id=1]
[ext_resource path="res://Fonts/Roboto-Medium.ttf" type="DynamicFontData" id=2]
[ext_resource path="res://Scenes/Entry.gd" type="Script" id=3]

[sub_resource type="StyleBoxFlat" id=3]
bg_color = Color( 1, 1, 1, 1 )
border_width_left = 1
border_width_top = 1
border_width_right = 1
border_width_bottom = 1
border_color = Color( 0, 0, 0, 1 )

[sub_resource type="GDScript" id=7]
script/source = "extends Panel

# Declare member variables here. Examples:
# var a = 2
# var b = \"text\"
onready var pageInstance = $\"../../../../\"
onready var editable = false
onready var labelText = $\"Label Control/Text\"

export var title = \"\"

# Called when the node enters the scene tree for the first time.
func _ready():
	labelText.text = title

# Called every frame. 'delta' is the elapsed time since the previous frame.
func _process(delta):
	_set_Entry_Visibility()
	
func _set_editable(b):
	editable = b
	$\"Label Control/Editable Toggle\".pressed = editable

func _set_text(s):
	$\"Entry Bg/Entry\"._set_text(s)
	
func _get_text():
	return $\"Entry Bg/Text\".text

func _set_Entry_Visibility():
	if pageInstance.get_index() != 0 && !editable:
		find_node(\"Entry\").visible = false
		return
		
	if Global.state != 2:
		find_node(\"Entry\").visible = true
"

[sub_resource type="DynamicFont" id=14]
size = 14
extra_spacing_top = -2
font_data = ExtResource( 2 )

[sub_resource type="DynamicFont" id=15]
size = 18
font_data = ExtResource( 2 )

[sub_resource type="GDScript" id=12]
script/source = "extends CheckButton

# Declare member variables here. Examples:
# var a = 2
# var b = \"text\"
onready var sceneRoot = $\"../..\"
onready var pageInstance = $\"../../../../../../\"
# Called when the node enters the scene tree for the first time.
func _ready():
	if sceneRoot.name != \"PO\" && sceneRoot.name != \"Material\" && sceneRoot.name != \"Notes\":
		queue_free()

# Called every frame. 'delta' is the elapsed time since the previous frame.
func _process(delta):
	_set_Visibility()
	
func _set_Visibility():
	if pageInstance.get_index() != 0:
		visible = true
	else:
		visible = false
		
	if Global.state == 2:
		visible = false


func _on_Editable_Toggle_pressed():
	sceneRoot.editable = pressed
	Global._save()
"

[node name="Customer" type="Panel" groups=["Header Segment"]]
margin_right = 173.0
margin_bottom = 50.0
rect_min_size = Vector2( 200, 50 )
custom_styles/panel = SubResource( 3 )
script = SubResource( 7 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Entry Bg" type="Control" parent="."]
anchor_right = 1.0
anchor_bottom = 1.0
rect_min_size = Vector2( 0, 30 )
mouse_filter = 2
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Text" type="Label" parent="Entry Bg"]
anchor_right = 1.0
anchor_bottom = 1.0
margin_top = 18.0
custom_colors/font_color = Color( 0, 0, 0, 1 )
custom_fonts/font = ExtResource( 1 )
text = "this is a test"
align = 1
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Entry" type="LineEdit" parent="Entry Bg" groups=["Editor Only"]]
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = 6.0
margin_top = 16.0
margin_right = -6.0
margin_bottom = -8.0
text = "Entry Text"
align = 1
caret_blink = true
caret_blink_speed = 0.5
script = ExtResource( 3 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Label Control" type="Control" parent="."]
anchor_right = 1.0
anchor_bottom = 1.0
margin_bottom = -35.0
rect_min_size = Vector2( 0, 15 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Text" type="RichTextLabel" parent="Label Control"]
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = 6.0
margin_top = 2.0
custom_colors/default_color = Color( 0, 0, 0, 1 )
custom_constants/shadow_offset_x = 0
custom_fonts/normal_font = SubResource( 14 )
text = "Label Text"
scroll_active = false
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Editable Toggle" type="CheckButton" parent="Label Control" groups=["Editor Only"]]
anchor_left = 1.0
anchor_right = 1.0
margin_left = -100.523
margin_top = 4.63068
margin_right = 3.47731
margin_bottom = 53.6307
focus_mode = 0
custom_colors/font_color_disabled = Color( 0, 0, 0, 1 )
custom_colors/font_color_focus = Color( 0, 0, 0, 1 )
custom_colors/font_color_hover_pressed = Color( 0, 0, 0, 1 )
custom_colors/font_color = Color( 0, 0, 0, 1 )
custom_colors/font_color_hover = Color( 0, 0, 0, 1 )
custom_colors/font_color_pressed = Color( 0, 0, 0, 1 )
custom_fonts/font = SubResource( 15 )
enabled_focus_mode = 0
text = "Edit"
script = SubResource( 12 )
__meta__ = {
"_edit_use_anchors_": false
}

[connection signal="pressed" from="Label Control/Editable Toggle" to="Label Control/Editable Toggle" method="_on_Editable_Toggle_pressed"]
