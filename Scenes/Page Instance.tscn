[gd_scene load_steps=7 format=2]

[ext_resource path="res://Scenes/Header.tscn" type="PackedScene" id=1]
[ext_resource path="res://Theme/Button Theme.tres" type="Theme" id=3]

[sub_resource type="GDScript" id=1]
script/source = "extends VBoxContainer

# Declare member variables here. Examples:
# var a = 2
# var b = \"text\"
onready var pageList = $\"../../../../../Side Bar/PageList Background/PageList\"
onready var buttons = $\"Add Row Buttons\"
onready var alert = $\"../../../../../Alert\"

onready var rowScene = load(\"res://Scenes/Row.tscn\")
# Called when the node enters the scene tree for the first time.
func _ready():
	
	if Global.state == 3: return
	
	buttons._on_Add_Short_Row_pressed()
	
	_init_display_name()	
	pageList.add_item(name)
	pageList._open_page(pageList.get_item_count() - 1)
	
	
	
# Called every frame. 'delta' is the elapsed time since the previous frame.
#func _process(delta):
#	pass

func _add_row(n):
	if n == 0:
		buttons._on_Add_Short_Row_pressed()
	else:
		buttons._on_Add_Tall_Row_pressed()

func _init_display_name():
	
	var pages = get_tree().get_nodes_in_group(\"Page Instance\")
	var pageNames = []
	var pageNumber = 1
	
	for page in pages:
		pageNames.push_back(page.name)

	while true:
		if pageNames.has(\"Page \" + String(pageNumber)):
			pageNumber += 1
		else:
			break 
	
	name = \"Page \" + String(pageNumber)


func _save():
	var rows_dict = {}
	
	for n in get_children():
		if n.is_in_group(\"Row\"):
			rows_dict[n.get_position_in_parent()] = n._save()
	
	var save_dict = {
		\"Customer\" : find_node(\"Customer\")._get_text(),
		\"Header\" : $\"Header\"._save(),
		\"Rows\" : rows_dict
	}
	
	return save_dict
	
func _load(dict):
	$\"Header\"._load(dict[\"Header\"])
	pageList.add_item(name)
	
	var rows_dict = dict[\"Rows\"]
	
	
	for k in rows_dict.keys():
		var rowDict = rows_dict[k]
		var rowInstance = buttons._on_Add_Short_Row_pressed()
		rowInstance._load(rowDict)
	
	buttons._fix_index()
	
	
	
	
	
	
	
	


"

[sub_resource type="GDScript" id=2]
script/source = "extends VBoxContainer

# Declare member variables here. Examples:
# var a = 2
# var b = \"text\"
# Called when the node enters the scene tree for the first time.
onready var rowScene = load(\"res://Scenes/Row.tscn\")
onready var rowButtons = $HBoxContainer
func _ready():
	pass # Replace with function body.

# Called every frame. 'delta' is the elapsed time since the previous frame.
#func _process(delta):
#	pass

func _fix_index():
	var index = get_parent().get_child_count() - 1
	get_parent().move_child(self, index)

func _on_Add_Short_Row_pressed():
	var rowInstance = rowScene.instance()	
	get_parent().add_child(rowInstance)
	rowInstance._init_size(0)
	_fix_index()
	return rowInstance
	Global._save()


func _on_Add_Tall_Row_pressed():
	if !can_place_tall_row():
		return
	var rowInstance = rowScene.instance()
	get_parent().add_child(rowInstance)
	rowInstance._init_size(1)
	_fix_index()
	return rowInstance
	Global._save()

func _on_Copy_Previous_Row_pressed():
	var index = get_parent().get_child_count() - 2
	var duplicate = get_parent().get_child(index).duplicate()
	
	if duplicate.ID == 1 and !can_place_tall_row():
		return
		
	get_parent().add_child(duplicate)
	_fix_index()
	return duplicate
	Global._save()

func can_place_short_row():
	if rowButtons.get_global_rect().position.y > 1000:
		return false
	return true
	
func can_place_tall_row():
	if rowButtons.get_global_rect().position.y > 890:
		return false
	return true
"

[sub_resource type="GDScript" id=5]
script/source = "extends Label


# Declare member variables here. Examples:
# var a = 2
# var b = \"text\"
onready var totalPrice = $\"..\"


# Called when the node enters the scene tree for the first time.
func _ready():
	pass # Replace with function body.


# Called every frame. 'delta' is the elapsed time since the previous frame.
func _process(delta):
	totalPrice.visible = Global.showTotalPrice
	if Global.hidePricing:
		totalPrice.visible = false
	var total = 0
	for pe in findNodeDescendantsInGroup($\"../../../..\", \"Pricing\"):
		var number = int(pe.get_node(\"Entry Text\").text)
		total += number
	text = str(total)


func findNodeDescendantsInGroup(node: Node, groupName: String) -> Array:
	var descendantsInGroup := []
	for child in node.get_children():
		if child.is_in_group(groupName):
			descendantsInGroup.append(child)
		descendantsInGroup += findNodeDescendantsInGroup(child, groupName)
	return descendantsInGroup
"

[sub_resource type="GDScript" id=4]
script/source = "extends HBoxContainer


# Declare member variables here. Examples:
# var a = 2
# var b = \"text\"


# Called when the node enters the scene tree for the first time.
func _ready():
	pass # Replace with function body.


# Called every frame. 'delta' is the elapsed time since the previous frame.
func _process(delta):
	visible = get_global_rect().position.y < 1000
"

[node name="Page Instance" type="VBoxContainer" groups=["Page Instance"]]
margin_left = 10.0
margin_top = 5.0
margin_right = 859.0
margin_bottom = 628.0
rect_min_size = Vector2( 850, 0 )
rect_scale = Vector2( 0.98, 0.98 )
mouse_filter = 2
theme = ExtResource( 3 )
custom_constants/separation = -1
script = SubResource( 1 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Header" parent="." instance=ExtResource( 1 )]

[node name="Add Row Buttons" type="VBoxContainer" parent="."]
margin_top = 194.0
margin_right = 850.0
margin_bottom = 232.0
rect_min_size = Vector2( 0, 30 )
custom_constants/separation = -2
script = SubResource( 2 )

[node name="ReferenceRect" type="ReferenceRect" parent="Add Row Buttons"]
margin_right = 850.0
margin_bottom = 10.0
rect_min_size = Vector2( 0, 10 )

[node name="Total Price" type="Control" parent="Add Row Buttons/ReferenceRect" groups=["Total Price"]]
margin_right = 40.0
margin_bottom = 40.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Total Price Label" type="Label" parent="Add Row Buttons/ReferenceRect/Total Price"]
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = 624.909
margin_top = 10.364
margin_right = 655.909
margin_bottom = 14.364
custom_colors/font_color = Color( 0, 0, 0, 1 )
text = "Total Price:"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Total Price Number" type="Label" parent="Add Row Buttons/ReferenceRect/Total Price"]
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = 700.827
margin_top = 9.90459
margin_right = 731.827
margin_bottom = 13.9046
custom_colors/font_color = Color( 0, 0, 0, 1 )
text = "Total Price:"
script = SubResource( 5 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="HBoxContainer" type="HBoxContainer" parent="Add Row Buttons"]
margin_top = 8.0
margin_right = 850.0
margin_bottom = 38.0
rect_min_size = Vector2( 850, 30 )
custom_constants/separation = 18
script = SubResource( 4 )

[node name="Add Short Row" type="Button" parent="Add Row Buttons/HBoxContainer" groups=["Editor Only"]]
margin_right = 150.0
margin_bottom = 30.0
rect_min_size = Vector2( 150, 0 )
text = "Add Short Row"
clip_text = true

[node name="Add Tall Row" type="Button" parent="Add Row Buttons/HBoxContainer" groups=["Editor Only"]]
margin_left = 168.0
margin_right = 318.0
margin_bottom = 30.0
rect_min_size = Vector2( 150, 0 )
text = "Add Tall Row"
clip_text = true

[node name="Copy Previous Row" type="Button" parent="Add Row Buttons/HBoxContainer" groups=["Editor Only"]]
margin_left = 336.0
margin_right = 486.0
margin_bottom = 30.0
rect_min_size = Vector2( 150, 0 )
text = "Copy Previous Row"
clip_text = true

[connection signal="pressed" from="Add Row Buttons/HBoxContainer/Add Short Row" to="Add Row Buttons" method="_on_Add_Short_Row_pressed"]
[connection signal="pressed" from="Add Row Buttons/HBoxContainer/Add Tall Row" to="Add Row Buttons" method="_on_Add_Tall_Row_pressed"]
[connection signal="pressed" from="Add Row Buttons/HBoxContainer/Copy Previous Row" to="Add Row Buttons" method="_on_Copy_Previous_Row_pressed"]
